- alias: 'Follow Me Lights Mode On'
  trigger:
    platform: state
    entity_id: sensor.eveybody_home
    to: 'somebody'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.follow_me_lights

- alias: 'Follow Me Lights Mode Off'
  trigger:
    platform: state
    entity_id: sensor.eveybody_home
    to: 'everybody'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.follow_me_lights


- alias: 'Arriving Home'
  trigger:
    - platform: state
      entity_id:
         - device_tracker.dmitry
         - device_tracker.eileen
         - device_tracker.dogwalker
      from: 'not_home'
      to: 'home'
  action:
     service: script.set_arrive_sensor
     data_template:
        tracker: >
           {% set person = trigger.entity_id.split('.')[1] %}
           {{  'input_boolean.' +  person + '_arriving' }}


- alias: 'Dmitry Arrival Greeting'
  trigger:
    platform: state
    entity_id: sensor.living_room_door_entry
    to: 'Open'
  action:
    - service: script.arrive_dmitry_greetings
      data_template:
        person: 'dmitry'
        speech_message: >
           {% set person = 'Dimitri' %}
           {{ [
           "Welcome back home " + person ,
           "The king is back. Welcome " + person,
           "Are you drunk? " + person,
           "Why took so long daddy? Woof!",
           "There he is.." + person,
           person + "Life is like a song, you’re back where you belong.",
           "Welcome Home!" + person
           ] | random }}
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.dmitry_arriving



- alias: 'Eileen Arrival Greeting'
  trigger:
    platform: state
    entity_id: sensor.living_room_door_entry
    to: 'Open'
  action:
    - service: script.arrive_eileen_greetings
      data_template:
        person: 'eileen'
        speech_message: >
           {% set person = 'Eileen' %}
           {{ [
           "Welcome back home " + person ,
           "I missed you mommy.. Woof.",
           "Great to see you " + person ,
           "Hope you had a great day " + person ,
           "Family is happy to have you back " + person ,
           "It is so lonelyy without you home " + person ,
           "I was about to be sad without you " + person ,
           "Hello.. My tail is all wagging Mommy." ,
           "Hope you had a good day " + person ,
           "Good to have you back " + person ,
           "How was your day " + person ,
           "Guess who is home?" + person,
           person + "is now in the house!",
           "Welcome Home Love. We have missed you. Or at least Dexter did.",
           "Our home is now complete. Welcome Back " + person,
           person + "Life is like a song, you’re back where you belong.",
           "Welcome Home " + person
           ] | random }}
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.eileen_arriving

- alias: 'DogWalker Arrival Greeting'
  trigger:
    platform: state
    entity_id: sensor.living_room_door_entry
    to: 'Open'
  action:
    - service: script.arrive_dogwalker_greetings
      data_template:
        person: 'Prioshka'
        speech_message: >
           {% set person = 'Preoshka' %}
           {{ [
           "Welcome  " + person ,
           "I was waiting for you to walk me.. Woof.",
           "My tail is wagging.. Woof,Woof " + person ,
           "Hope you had a great day " + person ,
           "I am happy to run on east coast with you " + person ,
           "Lets go play and run " + person ,
           "I was about to pee on the floor while waiting for you " + person ,
           "Hello.. My tail is all wagging" + person ,
           "Are we going for a walk? Yes. Yes. " ,
           "Lets play. I am ready to go " + person ,
           "Was looking out in the window for you " + person ,
           "Guess who is here?" + person,
           person + "is in the house. Yay! Woof,Woof!",
           "Now we can go pee! Welcome Back " + person,
           person + "Welcome to Dexter's house.",
           "Welcome to our home. " + person
           ] | random }}
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.dogwalker_arriving



- alias: 'Kitesurf Text Alert'
  trigger:
    platform: state
    entity_id: sensor.expavgwindy
    to: 'Windy'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'above_horizon'
      - condition: state
        entity_id: input_boolean.wind_alert
        state: 'on'
      - condition: time
        before: '18:30:00'
        after: '10:00:00'
  action:
    - service: script.send_wind_alert
      data_template:
          wind_message: >
            {{ [
             "Time to go foiling." ,
             "Bad day at the beach is better than good day at the office.",
             "Time to head to the beach.",
             "Wow, you could be riding now.",
             "What is your reason for not being at the beach now?.",
             "It's windy. Just like that. Boom!",
             "Family, friends and work can wait. Wind will not!",
             "Time to try that trick you were thinking about.",
             "Is that just me or is it windy now?",
             "I was getting bored, but it just picked up! Lets go.",
             "Pack your gear! Wind is up.",
             "Will it still be windy, by you get to the beach?. Only one way to find out.",
             "Everybody is out ridding. Are you ready to join them?",
             "Its windy! Who will be the first one out?",
             "Seems windy.",
             "Ready to ride? ",
             "Its kitesurfing Weather.",
             "Lets go foiling..",
             "Life is short. Go foil! ",
             "Good wind for kitesurfing! "
             ] | random }}

            B Jetty: {{ states.sensor.pws_wind_dir.state }} {{ ((states.sensor.pws_wind_kph_2.state | float * 0.4)  + ( states.sensor.pws_wind_gust_kph.state | float * 0.7 )) | round(1) }} kmh

            NSC:     {{ states.sensor.pws_wind_dir_2.state }}  {{ states.sensor.nscwindtotal.state | float | round(1) }} kmh

            ----------------

            5 min: From {{ states.sensor.pws_wind_kph_2.state | float | round(1) }} kmh To {{ states.sensor.pws_wind_gust_kph.state | float | round(1) }} kmh

            15 min EMA: {{ states.sensor.amawindtotal.state  | float | round(1) }}  kmh

            Temp: {{ states.sensor.pws_temp_c.state }} c  Pressure: {{ states.sensor.pws_pressure_mb.state }} mb

            Pressure Trend : {{ states.sensor.pws_pressure_trend.state }}

            Next Hour: {{ states.sensor.pws_weather_1h.state }}

- alias: Kitesurf Beach Report
  trigger:
    platform: state
    entity_id: input_boolean.kitesurf_wind_request
    to: 'on'
  action:
    - service: script.send_wind_alert
      data_template:
          wind_message: >
            {{ [
             "Time to go foiling." ,
             "Bad day at the beach is better than good day at the office.",
             "Time to head to the beach.",
             "Wow, you could be riding now.",
             "What is your reason for not being at the beach now?.",
             "It's windy. Just like that. Boom!",
             "Family, friends and work can wait. Wind will not!",
             "Time to try that trick you were thinking about.",
             "Is that just me or is it windy now?",
             "I was getting bored, but it just picked up! Lets go.",
             "Pack your gear! Wind is up.",
             "Will it still be windy, by you get to the beach?. Only one way to find out.",
             "Everybody is out ridding. Are you ready to join them?",
             "Its windy! Who will be the first one out?",
             "Seems windy.",
             "Ready to ride? ",
             "Its kitesurfing Weather.",
             "Lets go foiling..",
             "Life is short. Go foil! ",
             "Good wind for kitesurfing! "
             ] | random }}

            B Jetty: {{ states.sensor.pws_wind_dir.state }} {{ ((states.sensor.pws_wind_kph_2.state | float * 0.4)  + ( states.sensor.pws_wind_gust_kph.state | float * 0.7 )) | round(1) }} kmh

            NSC:     {{ states.sensor.pws_wind_dir_2.state }}  {{ states.sensor.nscwindtotal.state | float | round(1) }} kmh

            ----------------

            5 min: From {{ states.sensor.pws_wind_kph_2.state | float | round(1) }} kmh To {{ states.sensor.pws_wind_gust_kph.state | float | round(1) }} kmh

            15 min EMA: {{ states.sensor.amawindtotal.state  | float | round(1) }}  kmh

            Temp: {{ states.sensor.pws_temp_c.state }} c  Pressure: {{ states.sensor.pws_pressure_mb.state }} mb

            Pressure Trend : {{ states.sensor.pws_pressure_trend.state }}

            Next Hour: {{ states.sensor.pws_weather_1h.state }}


- alias: 'Kitesurf Voice Alert'
  trigger:
    platform: state
    entity_id: sensor.windy
    to: 'Windy'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'above_horizon'
      - condition: state
        entity_id: input_boolean.wind_alert
        state: 'on'
      - condition: time
        before: '18:30:00'
        after: '10:00:00'
      - condition: state
        entity_id: device_tracker.dmitry
        state: 'home'
  action:
    - service: script.yandex_say
      data_template:
        sonos_entity: media_player.living_room
        volume: 0.4
        delay: '00:00:05'
        message: >
           {% set wind_txt = " {{ states.sensor.pws_wind_string.state }} " %}
           {{ [
           'Maybe time to go foiling.' ,
           'Seems windy ' ,
           'Are you ready to ride? ' ,
           'Its kitesurfing Weather.' ,
           'Lets go foiling ' ,
           'Life is short, Go foil! ' ,
           'I think its good for kitesurfing!'
           ] | random }}



- alias: 'Dexter Pee call'
  trigger:
    platform: mqtt
    topic: iot/button/dexter/pee
  action:
    service: notify.ios_dmitry
    data:
      message: 'Daddy. I want to go pee.'
      data:
        push:
          badge: 5
          category: TEST_ALARM

- alias: 'Dexter TV Pee Alert'
  trigger:
    platform: state
    entity_id: device_tracker.eileen
    from: 'someplace'
    to: 'someplace'
  action:
    service: notify.LivingTv
    data:
      title: "Dexter Wee Alert"
      message: "Daddy I want to go pee!"

- alias: ET Comes Home
  trigger:
      platform: state
      entity_id: device_tracker.eileen
      from: 'not_home'
      to: 'home'
  action:
     service: notify.ios_dmitry
     data:
       message: 'ET is home'
       data:
         push:
           badge: 5
           category: TEST_ALARM

- alias: ET Left Home
  trigger:
      platform: state
      entity_id: device_tracker.eileen
      from: 'home'
      to: 'not_home'
  action:
     service: notify.ios_dmitry
     data:
       message: 'ET left home'
       data:
         push:
           badge: 5
           category: TEST_ALARM


- alias: Cleaner Arrives
  trigger:
      platform: state
      entity_id: device_tracker.sharon
      from: 'not_home'
      to: 'home'
  action:
     service: notify.ios_dmitry
     data:
       message: 'Cleaner Arrived'
       data:
         push:
           badge: 5
           category: TEST_ALARM

- alias: Cleaner Left
  trigger:
      platform: state
      entity_id: device_tracker.sharon
      from: 'home'
      to: 'not_home'
  action:
      service: notify.ios_dmitry
      data:
        message: 'Cleaner Left Home'
        data:
          push:
            badge: 5
            category: TEST_ALARM

- alias: Dog Walker Arrived
  trigger:
    platform: state
    entity_id: device_tracker.dogwalker
    from: 'not_home'
    to: 'home'
  action:
    service: notify.ios_dmitry
    data:
      message: 'Dog Wallker Arrived'
      data:
        push:
          badge: 5
          category: TEST_ALARM

- alias: Dog Walker Left Home
  trigger:
    platform: state
    entity_id: device_tracker.dogwalker
    from: 'home'
    to: 'not_home'
  action:
    service: notify.ios_dmitry
    data:
      message: 'Dog Walker left house recently'
      data:
        push:
          badge: 5
          category: TEST_ALARM


- alias: Aircon ON
  trigger:
    platform: state
    entity_id: input_boolean.aircon
    to: 'on'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.livingroom
      command: Power ON
      device: !secret au_device_id_aircon

- alias: Bedroom Aircon ON
  trigger:
    platform: state
    entity_id: input_boolean.bedroom_aircon
    to: 'on'
  action:
      service: script.turn_bedroom_aircon_on

- alias: Bedroom Aircon OFF
  trigger:
    platform: state
    entity_id: input_boolean.bedroom_aircon
    to: 'off'
  action:
    service: climate.set_operation_mode
    entity_id: climate.bedroom_climate_control_cooling_1
    data:
      operation_mode: "Off"


- alias: Office Aircon ON
  trigger:
    platform: state
    entity_id: input_boolean.office_aircon
    to: 'on'
  action:
    service: script.turn_office_aircon_on

- alias: Office Dehumidifier ON
  trigger:
    platform: state
    entity_id: input_boolean.office_dehumidifer
    to: 'on'
  action:
    service: script.turn_office_dehumidifier_on


- alias: Office Aircon OFF
  trigger:
    platform: state
    entity_id: input_boolean.office_aircon
    to: 'off'
  action:
    service: climate.set_operation_mode
    entity_id: climate.office_climate_control_cooling_1
    data:
      operation_mode: "Off"

- alias: Office Dehumidifier OFF
  trigger:
    platform: state
    entity_id: input_boolean.office_dehumidifer
    to: 'off'
  action:
    service: script.turn_office_dehumidifier_off

- alias: Guestroom Aircon ON
  trigger:
    platform: state
    entity_id: input_boolean.guestroom_aircon
    to: 'on'
  action:
      service: script.turn_guestroom_aircon_on

- alias: Guestroom Aircon OFF
  trigger:
    platform: state
    entity_id: input_boolean.guestroom_aircon
    to: 'off'
  action:
    service: climate.set_operation_mode
    entity_id: climate.guestroom_climate_control_cooling_1
    data:
      operation_mode: "Off"


- alias: Aircon OFF
  trigger:
    platform: state
    entity_id: input_boolean.aircon
    to: 'off'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.livingroom
      command: Power OFF
      device: !secret au_device_id_aircon


- alias: Fan ON
  trigger:
    platform: state
    entity_id: input_boolean.fan
    to: 'on'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.livingroom
      command: PowerToggle
      device: !secret au_device_id_fan


- alias: Fan OFF
  trigger:
    platform: state
    entity_id: input_boolean.fan
    to: 'off'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.livingroom
      command: PowerToggle
      device: !secret au_device_id_fan

- alias: Tv ON
  trigger:
    platform: state
    entity_id: input_boolean.tv
    to: 'on'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.livingroom
      command: PowerOn
      device: !secret au_device_id_tv


- alias: Tv OFF
  trigger:
    platform: state
    entity_id: input_boolean.tv
    to: 'off'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.livingroom
      command: PowerOff
      device: !secret au_device_id_tv

- alias: AppleTv ON Scrreen Saver
  trigger:
    platform: state
    entity_id: input_boolean.apple_tv
    to: 'on'
  action:
    service: script.turn_apple_tv_screensaver_on

- alias: AppleTv OFF Scrreen Saver
  trigger:
    platform: state
    entity_id: input_boolean.apple_tv
    to: 'off'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.livingroom
      command: PowerOff
      device: !secret au_device_id_tv




- alias: Sonos Activity Music ON
  trigger:
    platform: state
    entity_id: input_boolean.Sonos_LivingRoom
    to: 'on'
  action:
    service: remote.turn_on
    entity_id: remote.living_room
    data:
      activity: 26463498
      device: !secret au_device_id_sonos

- alias: Sonos Activity Music OFF
  trigger:
    platform: state
    entity_id: input_boolean.Sonos_LivingRoom
    to: 'off'
  action:
    service: remote.turn_off
    entity_id: remote.living_room



- alias: Door Entry
  trigger:
    platform: state
    entity_id: sensor.living_room_door_entry
    to: 'Open'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
  action:
    service: script.living_room_lights_on


- alias: Living Room Lights ON
  trigger:
    platform: state
    entity_id: sensor.living_room_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: script.living_room_lights_on


- alias: Turn off Living room lights after 10 mins no motion
  trigger:
    platform: state
    entity_id: sensor.living_room_motion
    to: 'Off'
    for:
      minutes: 10
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: script.living_room_lights_off


- alias: Familiy  Room Lights ON
  trigger:
    platform: state
    entity_id: sensor.family_room_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service:  script.follow_me_lights_on
    data_template:
      light_id: switch.family_room_ceiling_light_switch


- alias: Turn off Family room lights after 2 mins no motion
  trigger:
    platform: state
    entity_id: sensor.family_room_motion
    to: 'Off'
    for:
      minutes: 2
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: switch.family_room_ceiling_light_switch



- alias: BedRoom Lights ON
  trigger:
    platform: state
    entity_id: sensor.bedroom_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
      - condition: time
        before: '23:59:58'
        after: '19:00:00'
  action:
   service:  script.follow_me_lights_on
   data_template:
      light_id: switch.bedroom_ceiling_light_switch


- alias: BedRoom LED ON
  trigger:
    platform: state
    entity_id: sensor.bedroom_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
      - condition: time
        after: '23:45:59'
        before: '06:30:00'
  action:
    service: homeassistant.turn_on
    data:
      entity_id: light.bedroom_steps_led_level
      brightness: 50



- alias: Bedroom lights OFF after 2 mins no motion
  trigger:
    platform: state
    entity_id: sensor.bedroom_motion
    to: 'Off'
    for:
      minutes: 2
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: switch.bedroom_ceiling_light_switch, light.bedroom_steps_led_level

- alias: Facebook Wind Alert
  trigger:
    platform: state
    entity_id: sensor.windy
    to: 'Windy'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'above_horizon'
      - condition: state
        entity_id: input_boolean.wind_alert
        state: 'on'
      - condition: time
        before: '18:30:00'
        after: '10:00:00'
  action:
    service: script.send_facebook_wind_alert



- alias: Office Lights ON
  trigger:
    platform: state
    entity_id: sensor.office_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service:  script.follow_me_lights_on
    data_template:
      light_id: switch.office_lights_switch_2


- alias: Turn off Office lights after 10 mins no motion
  trigger:
    platform: state
    entity_id: sensor.office_motion
    to: 'Burglar'
    for:
      minutes: 10
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: switch.office_lights_switch_2


- alias: Kitchen Lights ON
  trigger:
    platform: state
    entity_id: sensor.kitchen_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service:  script.follow_me_lights_on
    data_template:
      light_id: switch.kitchen_light_switch


- alias: Turn off Kitchen lights after 20 mins no motion
  trigger:
    platform: state
    entity_id: sensor.office_motion
    to: 'Burglar'
    for:
      minutes: 20
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: switch.kitchen_light_switch

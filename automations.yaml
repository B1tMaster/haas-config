- alias: 'Follow Me Lights Mode On'
  trigger:
    platform: state
    entity_id: sensor.eveybody_home
    to: 'somebody'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.follow_me_lights

- alias: 'Follow Me Lights Mode Off'
  trigger:
    platform: state
    entity_id: sensor.eveybody_home
    to: 'everybody'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.follow_me_lights


- alias: 'Arriving Home'
  trigger:
    - platform: state
      entity_id:
         - device_tracker.dmitry
         - device_tracker.eileen
      from: 'not_home'
      to: 'home'
  action:
     service: script.set_arrive_sensor
     data_template:
        tracker: >
           {% set person = trigger.entity_id.split('.')[1] %}
           {{  'input_boolean.' +  person + '_arriving' }}


- alias: 'Dmitry Arrival Greeting'
  trigger:
    platform: state
    entity_id: sensor.living_room_door_entry
    to: 'Open'
  action:
    - wait_template: "{{ states('sensor.dmitry_arriving') == 'arriving' }}"
      timeout: '00:01:00'
    - service: script.arrive_greetings
      data_template:
        speech_message: >
           {% set person = 'Dimitri' %}
           {{ [
           "Welcome back home " + person ,
           "The king is back. Welcome " + person,
           "Are you drunk? " + person,
           "Why took so long daddy? Woof!",
           "There he is.." + person,
           person + "Life is like a song, you’re back where you belong.",
           "Welcome Home!" + person
           ] | random }}
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.dmitry_arriving



- alias: 'Eileen Arrival Greeting'
  trigger:
    platform: state
    entity_id: sensor.living_room_door_entry
    to: 'Open'
  action:
    - wait_template: "{{ states('sensor.eileen_arriving') == 'arriving' }}"
      timeout: 00:01:00
    - service: script.arrive_greetings
      data_template:
        speech_message: >
           {% set person = 'Eileen' %}
           {{ [
           "Welcome back home " + person ,
           "I missed you mommy.. Woof.",
           "Great to see you " + person ,
           "Hope you had a great day " + person ,
           "Family is happy to have you back " + person ,
           "It is so lonelyy without you home " + person ,
           "I was about to be sad without you " + person ,
           "Hello.. My tail is all wagging Mommy." ,
           "Hope you had a good day " + person ,
           "Good to have you back " + person ,
           "How was your day " + person ,
           "Guess who is home?" + person,
           person + "is now in the house. Yaay!",
           "Welcome Home Love. We have missed you. Or at least Dexter did.",
           "Our home is now complete. Welcome Back " + person,
           person + "Life is like a song, you’re back where you belong.",
           "Welcome Home " + person
           ] | random }}
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.eileen_arriving



- alias: 'Dexter Pee call'
  trigger:
    platform: mqtt
    topic: iot/button/dexter/pee
  action:
    service: notify.ios_dmitry
    data:
      message: 'Daddy. I want to go pee.'
      data:
        push:
          badge: 5
          category: TEST_ALARM

- alias: 'Test TV Notification'
  trigger:
    platform: state
    entity_id: device_tracker.eileen
    from: 'someplace'
    to: 'someplace'
  action:
    service: notify.LivingTv
    data:
      title: "Wind Alert"
      message: "It's Windy!"

- alias: ET Comes Home
  trigger:
      platform: state
      entity_id: device_tracker.eileen
      from: 'not_home'
      to: 'home'
  action:
     service: notify.ios_dmitry
     data:
       message: 'ET is home'
       data:
         push:
           badge: 5
           category: TEST_ALARM

- alias: ET Left Home
  trigger:
      platform: state
      entity_id: device_tracker.eileen
      from: 'home'
      to: 'not_home'
  action:
     service: notify.ios_dmitry
     data:
       message: 'ET left home'
       data:
         push:
           badge: 5
           category: TEST_ALARM


- alias: Cleaner Arrives
  trigger:
      platform: state
      entity_id: device_tracker.sharon
      from: 'not_home'
      to: 'home'
  action:
     service: notify.ios_dmitry
     data:
       message: 'Cleaner Arrived'
       data:
         push:
           badge: 5
           category: TEST_ALARM

- alias: Cleaner Left
  trigger:
      platform: state
      entity_id: device_tracker.sharon
      from: 'home'
      to: 'not_home'
  action:
      service: notify.ios_dmitry
      data:
        message: 'Cleaner Left Home'
        data:
          push:
            badge: 5
            category: TEST_ALARM

- alias: Dog Walker Arrived
  trigger:
    platform: state
    entity_id: device_tracker.prioska
    from: 'not_home'
    to: 'home'
  action:
    service: notify.ios_dmitry
    data:
      message: 'Dog Wallker Arrived'
      data:
        push:
          badge: 5
          category: TEST_ALARM

- alias: Dog Walker Left Home
  trigger:
    platform: state
    entity_id: device_tracker.prioska
    from: 'home'
    to: 'not_home'
  action:
    service: notify.ios_dmitry
    data:
      message: 'Dog Walker left house recently'
      data:
        push:
          badge: 5
          category: TEST_ALARM


- alias: Aircon ON
  trigger:
    platform: state
    entity_id: input_boolean.aircon
    to: 'on'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.living_room
      command: Power ON
      device: !secret au_device_id_aircon

- alias: Bedroom Aircon ON
  trigger:
    platform: state
    entity_id: input_boolean.bedroom_aircon
    to: 'on'
  action:
      service: script.turn_bedroom_aircon_on

- alias: Bedroom Aircon OFF
  trigger:
    platform: state
    entity_id: input_boolean.bedroom_aircon
    to: 'off'
  action:
    service: climate.set_operation_mode
    entity_id: climate.bedroom_climate_control_cooling_1
    data:
      operation_mode: "Off"


- alias: Office Aircon ON
  trigger:
    platform: state
    entity_id: input_boolean.office_aircon
    to: 'on'
  action:
    service: script.turn_office_aircon_on

- alias: Office Dehumidifier ON
  trigger:
    platform: state
    entity_id: input_boolean.office_dehumidifer
    to: 'on'
  action:
    service: script.turn_office_dehumidifier_on


- alias: Office Aircon OFF
  trigger:
    platform: state
    entity_id: input_boolean.office_aircon
    to: 'off'
  action:
    service: climate.set_operation_mode
    entity_id: climate.office_climate_control_cooling_1
    data:
      operation_mode: "Off"

- alias: Office Dehumidifier OFF
  trigger:
    platform: state
    entity_id: input_boolean.office_dehumidifer
    to: 'off'
  action:
    service: script.turn_office_dehumidifier_off

- alias: Guestroom Aircon ON
  trigger:
    platform: state
    entity_id: input_boolean.guestroom_aircon
    to: 'on'
  action:
      service: script.turn_guestroom_aircon_on

- alias: Guestroom Aircon OFF
  trigger:
    platform: state
    entity_id: input_boolean.guestroom_aircon
    to: 'off'
  action:
    service: climate.set_operation_mode
    entity_id: climate.guestroom_climate_control_cooling_1
    data:
      operation_mode: "Off"


- alias: Aircon OFF
  trigger:
    platform: state
    entity_id: input_boolean.aircon
    to: 'off'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.living_room
      command: Power OFF
      device: !secret au_device_id_aircon


- alias: Fan ON
  trigger:
    platform: state
    entity_id: input_boolean.fan
    to: 'on'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.living_room
      command: PowerToggle
      device: !secret au_device_id_fan


- alias: Fan OFF
  trigger:
    platform: state
    entity_id: input_boolean.fan
    to: 'off'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.living_room
      command: PowerToggle
      device: !secret au_device_id_fan

- alias: Tv ON
  trigger:
    platform: state
    entity_id: input_boolean.tv
    to: 'on'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.living_room
      command: PowerOn
      device: !secret au_device_id_tv


- alias: Tv OFF
  trigger:
    platform: state
    entity_id: input_boolean.tv
    to: 'off'
  action:
    service: remote.send_command
    data_template:
      entity_id: remote.living_room
      command: PowerOff
      device: !secret au_device_id_tv

- alias: Door Entry
  trigger:
    platform: state
    entity_id: sensor.living_room_door_entry
    to: 'Open'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
  action:
    service: script.living_room_lights_on


- alias: Living Room Lights ON
  trigger:
    platform: state
    entity_id: sensor.living_room_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: service: script.living_room_lights_on


- alias: Turn off Living room lights after 10 mins no motion
  trigger:
    platform: state
    entity_id: sensor.living_room_motion
    to: 'Off'
    for:
      minutes: 10
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: service: service: script.living_room_lights_off


- alias: Familiy  Room Lights ON
  trigger:
    platform: state
    entity_id: sensor.family_room_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service:  script.follow_me_lights_on
    data_template:
      light_id: switch.family_room_ceiling_light_switch


  service_template: >
      {% if is_state('input_boolean.follow_me_lights', 'on') %}
       script.follow_me_lights_on
       data:
          light_id: switch.family_room_ceiling_light_switch
    {% else %}
       homeassistant.turn_on
       data:
         entity_id: switch.family_room_ceiling_light_switch
    {% endif %}



- alias: Turn off Family room lights after 2 mins no motion
  trigger:
    platform: state
    entity_id: sensor.family_room_motion
    to: 'Off'
    for:
      minutes: 2 
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: switch.family_room_ceiling_light_switch 



- alias: BedRoom Lights ON
  trigger:
    platform: state
    entity_id: sensor.bedroom_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
      - condition: time
        before: '23:59:58'
  action:
   service:  script.follow_me_lights_on
   data_template:
      light_id: switch.bedroom_ceiling_light_switch


- alias: BedRoom LED ON
  trigger:
    platform: state
    entity_id: sensor.bedroom_motion
    to: 'Burglar'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
      - condition: time
        after: '23:59:59'
  action:
    service: homeassistant.turn_on
    data:
      entity_id: light.bedroom_steps_led_level
      brightness: 50



- alias: Bedroom lights OFF after 2 mins no motion
  trigger:
    platform: state
    entity_id: sensor.bedroom_motion
    to: 'Off'
    for:
      minutes: 2
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: input_boolean.motion_detection
        state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: switch.bedroom_ceiling_light_switch, light.bedroom_steps_led_level



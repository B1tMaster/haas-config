set_arrive_sensor:
  alias: "Set status of Arrive sensor"
  sequence:
   - service: input_boolean.turn_on
     data_template:
       entity_id: "{{ tracker }}"
   - delay:
         minutes: 1
   - service: homeassistant.turn_off
     data_template:
        entity_id: "{{ tracker }}"

arrive_greetings:
  alias: "Greetings on Arrival Home"
  sequence:
   - service: script.sonos_say
     data_template:
       sonos_entity: media_player.living_room
       volume: 0.4
       message: "{{ speech_message }}"
       delay: '00:00:08'

arrive_dmitry_greetings:
  alias: "Greetings on Arrival Home"
  sequence:
   - wait_template: "{{ is_state('sensor.dmitry_arriving', 'arriving') }}"
     timeout: '00:01:00'
   - service: script.sonos_say
     data_template:
       sonos_entity: media_player.living_room
       volume: 0.4
       message: "{{ speech_message }}"
       delay: '00:00:08'

arrive_eileen_greetings:
  alias: "Eileen Greetings on Arrival Home"
  sequence:
   - wait_template: "{{ is_state('sensor.eileen_arriving', 'arriving') }}"
     timeout: '00:01:00'
   - service: script.sonos_say
     data_template:
       sonos_entity: media_player.living_room
       volume: 0.4
       message: "{{ speech_message }}"
       delay: '00:00:08'

arrive_dogwalker_greetings:
  alias: "DogWalker Greetings on Arrival Home"
  sequence:
   - wait_template: "{{ is_state('sensor.dogwalker_arriving', 'arriving') }}"
     timeout: '00:01:00'
   - service: script.sonos_say
     data_template:
       sonos_entity: media_player.living_room
       volume: 0.4
       message: "{{ speech_message }}"
       delay: '00:00:08'




dexter_pee_call:
  alias: "Dexter Pee Action Script"
  sequence:
   - service: script.sonos_say
     data:
       sonos_entity: media_player.living_room
       volume: 0.4
       message: 'Daddy, I want to go pee'
       delay: '00:00:08'

yandex_say:
  alias: "Sonos TTS script"
  sequence:
   - service: media_player.sonos_snapshot
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: media_player.sonos_unjoin
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: media_player.volume_set
     data_template:
       entity_id: "{{ sonos_entity }}"
       volume_level: "{{ volume }}"
   - service: tts.yandextts_say
     data_template:
       entity_id: "{{ sonos_entity }}"
       message: "{{ message }}"
   - delay: "{{ delay }}"
   - service: media_player.sonos_restore
     data_template:
       entity_id: "{{ sonos_entity }}"

google_say:
  alias: "Sonos TTS script"
  sequence:
   - service: media_player.sonos_snapshot
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: media_player.sonos_unjoin
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: media_player.volume_set
     data_template:
       entity_id: "{{ sonos_entity }}"
       volume_level: "{{ volume }}"
   - service: tts.google_say
     data_template:
       entity_id: "{{ sonos_entity }}"
       message: "{{ message }}"
   - delay: "{{ delay }}"
   - service: media_player.sonos_restore
     data_template:
       entity_id: "{{ sonos_entity }}"


sonos_say:
  alias: "Sonos TTS script"
  sequence:
   - service: media_player.sonos_snapshot
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: media_player.sonos_unjoin
     data_template:
       entity_id: "{{ sonos_entity }}"
   - service: media_player.volume_set
     data_template:
       entity_id: "{{ sonos_entity }}"
       volume_level: "{{ volume }}"
   #- service: tts.yandextts_say
   - service: tts.google_say
     data_template:
       entity_id: "{{ sonos_entity }}"
       message: "{{ message }}"
   - delay: "{{ delay }}"
   - service: media_player.sonos_restore
     data_template:
       entity_id: "{{ sonos_entity }}"

send_wind_alert:
  sequence:
   - service: notify.ios_dmitry
     data_template:
       message: "{{ wind_message }}"
       data:
         push:
           badge: 5
           category: TEST_ALARM
   - service: homeassistant.turn_off
     data:
       entity_id: input_boolean.kitesurf_wind_request


follow_me_lights_on:
  sequence:
   - service: homeassistant.turn_on
     data_template:
       entity_id: >
        {{ light_id }}

   - service: switch.turn_off
     data_template:
       entity_id: >
        {%- set light_remove =  [ light_id ]  %}
        {%- set all_lights = ['switch.bedroom_ceiling_light_switch' , 'switch.family_room_ceiling_light_switch', 'switch.office_lights_switch_2', 'switch.kitchen_light_switch' ] %}
        {%- if is_state('input_boolean.follow_me_lights', 'on') -%}
        {%- for light in all_lights if (light not in light_remove) -%}
        {{light}}{% if not loop.last %}{{", "}}{% endif %}
        {%- endfor -%}
        {%- else -%}
         switch.null.switch
        {%- endif -%}

   - service: light.turn_off
     data_template:
       entity_id: >
        {%- set light_remove =  [ light_id ]  %}
        {%- set all_lights = ['light.living_room_ceiling_light_1_level', 'light.living_room_ceiling_light_2_level' ] %}
        {%- if is_state('input_boolean.follow_me_lights', 'on') -%}
        {%- for light in all_lights if (light not in light_remove) -%}
        {{light}}{% if not loop.last %}{{", "}}{% endif %}
        {%- endfor -%}
        {%- else -%}
         light.null.light
        {%- endif -%}

living_room_lights_on:
  sequence:
   - service: script.follow_me_lights_on
     data_template:
       light_id: >

         {%- if is_state("light.living_room_ceiling_light_1_level","on") -%}
            light.living_room_ceiling_light_1_level
         {%- elif is_state("light.living_room_ceiling_light_2_level", "on") -%}
            light.living_room_ceiling_light_2_level
         {%- else -%}
         {{ [ "light.living_room_ceiling_light_1_level","light.living_room_ceiling_light_2_level" ] | random }}
         {%- endif -%}



living_room_lights_off:
  sequence:
   - service: homeassistant.turn_off
     data:
       entity_id: light.living_room_ceiling_light_1_level
   - service: homeassistant.turn_off
     data:
       entity_id: light.living_room_ceiling_light_2_level



turn_office_dehumidifier_on:
  sequence:
   - service: climate.set_operation_mode
     entity_id: climate.office_climate_control_cooling_1
     data:
       operation_mode: "Dry Air"

turn_office_dehumidifier_off:
  sequence:
   - service: climate.set_operation_mode
     entity_id: climate.office_climate_control_cooling_1
     data:
       operation_mode: "Off"

turn_guestroom_aircon_on:
  sequence:
   - service: climate.set_operation_mode
     entity_id: climate.guestroom_climate_control_cooling_1
     data:
       operation_mode: Cool
   - delay:
       seconds: 1
   - service: climate.set_temperature
     entity_id: climate.guestroom_climate_control_cooling_1
     data:
       temperature: 22
   - delay:
       seconds: 1
   - service: climate.set_fan_mode
     entity_id: climate.guestroom_climate_control_cooling_1
     data:
       fan_mode: "Auto Low"


turn_office_aircon_on:
  sequence:
   - service: climate.set_operation_mode
     entity_id: climate.office_climate_control_cooling_1
     data:
       operation_mode: Cool
   - delay:
       seconds: 1
   - service: climate.set_temperature
     entity_id: climate.office_climate_control_cooling_1
     data:
       temperature: 23
   - delay:
       seconds: 1
   - service: climate.set_fan_mode
     entity_id: climate.office_climate_control_cooling_1
     data:
       fan_mode: "Auto Low"



turn_bedroom_aircon_on:
  sequence:
   - service: climate.set_operation_mode
     entity_id: climate.bedroom_climate_control_cooling_1
     data:
       operation_mode: "Cool"
   - delay:
       seconds: 1
   - service: climate.set_temperature
     entity_id: climate.bedroom_climate_control_cooling_1
     data:
       temperature: 21
   - delay:
       seconds: 1
   - service: climate.set_fan_mode
     entity_id: climate.bedroom_climate_control_cooling_1
     data:
       fan_mode: "Auto High"


turn_apple_tv_screensaver_on:
  sequence:
   - service: remote.send_command
     data_template:
      entity_id: remote.livingroom
      command: PowerOn
      device: !secret au_device_id_tv
   - delay:
       seconds: 3.0
   - service: remote.send_command
     data_template:
      entity_id: remote.livingroom
      command:
        - Home
        - Home
        - Menu
      device: !secret au_device_id_apple_tv
      delay_secs: 0.7


send_facebook_wind_alert:
  sequence:
    - delay:
        seconds: 5
    - service: notify.facebook_wind_alerts
      data_template:
        message: >
            {{ [
             "Time to go foiling." ,
             "Bad day at the beach is better than good day at the office.",
             "Time to head to the beach.",
             "Wow, you could be riding now.",
             "What is your reason for not being at the beach now?.",
             "It's windy. Just like that. Boom!",
             "Family, friends and work can wait. Wind will not!",
             "Time to try that trick you were thinking about.",
             "Is that just me or is it windy now?",
             "I was getting bored, but it just picked up! Lets go.",
             "Pack your gear! Wind is up.",
             "Will it still be windy, by you get to the beach?. Only one way to find out.",
             "Everybody is out ridding. Are you ready to join them?",
             "Its windy! Who will be the first one out?",
             "Seems windy.",
             "Ready to ride? ",
             "Its kitesurfing Weather.",
             "Lets go foiling..",
             "Life is short. Go foil! ",
             "Good wind for kitesurfing! "
             ] | random }}

            B Jetty: {{ states.sensor.pws_wind_dir.state }} {{ ((states.sensor.pws_wind_kph_2.state | float * 0.4)  + ( states.sensor.pws_wind_gust_kph.state | float * 0.7 )) | round(1) }} kmh

            NSC:     {{ states.sensor.pws_wind_dir_2.state }}  {{ states.sensor.nscwindtotal.state | float | round(1) }} kmh

            ----------------

            5 min: From {{ states.sensor.pws_wind_kph_2.state | float | round(1) }} kmh To {{ states.sensor.pws_wind_gust_kph.state | float | round(1) }} kmh

            15 min EMA: {{ states.sensor.amawindtotal.state  | float | round(1) }}  kmh

            Temp: {{ states.sensor.pws_temp_c.state }} c  Pressure: {{ states.sensor.pws_pressure_mb.state }} mb

            Pressure Trend : {{ states.sensor.pws_pressure_trend.state }}

            Next Hour: {{ states.sensor.pws_weather_1h.state }}

        target:
            - BROADCAST
